name: 'Build engine'

on:
  push:
    branches:
      - '**'
    paths:
      - '.github/workflows/**'
      - 'gamedata/**'
      - 'proj/**'
      - 'sdk/**'
      - 'src/**'
      - '*.sln'
      - '*.props'
      - '*.targets'
      - '*.ltx'
  pull_request:
    branches:
      - '**'
    paths:
      - '.github/workflows/**'
      - 'gamedata/**'
      - 'proj/**'
      - 'sdk/**'
      - 'src/**'
      - '*.sln'
      - '*.props'
      - '*.targets'
      - '*.ltx'

defaults:
  run:
    shell: pwsh

jobs:
  build-engine:
    name: 'Build'

    strategy:
      matrix:
        system:
          - windows-2022
        config:
          - Debug
          - Mixed
          - Release
        platform:
          - x86

    runs-on: ${{ matrix.system }}

    env:
      solution_name: XRay.sln

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: '>=5'

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            ${{ github.workspace }}/packages
          key: |
            ${{ runner.os }}-nuget-${{ hashFiles('**/*.nupkg') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          nuget restore $env:solution_name

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Build solution
        run: |
          msbuild $env:solution_name `
            -p:Configuration=${{ matrix.config }} `
            -p:Platform=${{ matrix.platform }} `
            -maxCpuCount `
            -nologo

      - name: Cleanup
        run: |
          ${{ github.workspace }}/delete-symbols.bat

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: bin (${{ matrix.config }}) ${{ github.sha }}
          path: bin/

      - name: Upload libraries
        uses: actions/upload-artifact@v3
        with:
          name: lib (${{ matrix.config }}) ${{ github.sha }}
          path: lib/

  pack-assets:
    name: 'Pack'

    needs: build-engine

    strategy:
      matrix:
        system:
          - windows-2022
        config:
          - Release
        platform:
          - Win32

    runs-on: ${{ matrix.system }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get binaries
        uses: actions/download-artifact@v3
        with:
          name: bin (${{ matrix.config }}) ${{ github.sha }}
          path: bin/

      - name: Generate patch
        run: |
          ${{ github.workspace }}/generate-patch.bat
          move ${{ github.workspace }}/patch `
            ${{ github.workspace }}/temp/gamedata

      - name: Upload gamedata
        uses: actions/upload-artifact@v3
        with:
          name: gamedata ${{ github.sha }}
          path: temp/gamedata/

      - name: Upload patch
        uses: actions/upload-artifact@v3
        with:
          name: patch ${{ github.sha }}
          path: patches/xpatch_03.db
